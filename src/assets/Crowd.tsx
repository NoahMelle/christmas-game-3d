/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from "three";
import { useRef, useEffect } from "react";
import { useGLTF, useAnimations } from "@react-three/drei";
import { GLTF } from "three-stdlib";

type GLTFResult = GLTF & {
  nodes: {
    Cube010: THREE.Mesh;
  };
  materials: {
    ["Material.002"]: THREE.MeshStandardMaterial;
  };
};

export function Crowd(props: JSX.IntrinsicElements["group"]) {
  const group = useRef<THREE.Group>(null);
  const { nodes, materials, animations } = useGLTF("/crowd.glb") as GLTFResult;
  const { actions } = useAnimations(animations, group);
  // Example usage of actions
  useEffect(() => {
    if (actions) {
      console.log(actions);
      // Example: play an animation named 'ActionName'
      actions["Cube.010Action"]?.play();
    }
  }, [actions]);
  return (
    <group ref={group} {...props} dispose={null}>
      <group name="Scene">
        <mesh
          name="Cube010"
          castShadow
          receiveShadow
          geometry={nodes.Cube010.geometry}
          material={materials["Material.002"]}
          position={[-0.129, 3.761, 0.078]}
        />
      </group>
    </group>
  );
}

useGLTF.preload("/crowd.glb");
